import {
  Lenis
} from "./chunk-HDSA2B4V.js";
import {
  require_react
} from "./chunk-4HAMFFQC.js";
import {
  __commonJS,
  __toESM
} from "./chunk-EQCVQC35.js";

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React = require_react();
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is(x, y3) {
          return x === y3 && (x !== 0 || 1 / x === 1 / y3) || x !== x && y3 !== y3;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useState = React.useState, useEffect = React.useEffect, useLayoutEffect = React.useLayoutEffect, useDebugValue2 = React.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe, value, getSnapshot]);
          useEffect(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe(handleStoreChange);
          }, [subscribe]);
          useDebugValue2(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM;
        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;
        var useSyncExternalStore$2 = React.useSyncExternalStore !== void 0 ? React.useSyncExternalStore : shim;
        exports.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js
var require_with_selector_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React = require_react();
        var shim = require_shim();
        function is(x, y3) {
          return x === y3 && (x !== 0 || 1 / x === 1 / y3) || x !== x && y3 !== y3;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useSyncExternalStore = shim.useSyncExternalStore;
        var useRef = React.useRef, useEffect = React.useEffect, useMemo = React.useMemo, useDebugValue2 = React.useDebugValue;
        function useSyncExternalStoreWithSelector2(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {
          var instRef = useRef(null);
          var inst;
          if (instRef.current === null) {
            inst = {
              hasValue: false,
              value: null
            };
            instRef.current = inst;
          } else {
            inst = instRef.current;
          }
          var _useMemo = useMemo(function() {
            var hasMemo = false;
            var memoizedSnapshot;
            var memoizedSelection;
            var memoizedSelector = function(nextSnapshot) {
              if (!hasMemo) {
                hasMemo = true;
                memoizedSnapshot = nextSnapshot;
                var _nextSelection = selector(nextSnapshot);
                if (isEqual !== void 0) {
                  if (inst.hasValue) {
                    var currentSelection = inst.value;
                    if (isEqual(currentSelection, _nextSelection)) {
                      memoizedSelection = currentSelection;
                      return currentSelection;
                    }
                  }
                }
                memoizedSelection = _nextSelection;
                return _nextSelection;
              }
              var prevSnapshot = memoizedSnapshot;
              var prevSelection = memoizedSelection;
              if (objectIs(prevSnapshot, nextSnapshot)) {
                return prevSelection;
              }
              var nextSelection = selector(nextSnapshot);
              if (isEqual !== void 0 && isEqual(prevSelection, nextSelection)) {
                return prevSelection;
              }
              memoizedSnapshot = nextSnapshot;
              memoizedSelection = nextSelection;
              return nextSelection;
            };
            var maybeGetServerSnapshot = getServerSnapshot === void 0 ? null : getServerSnapshot;
            var getSnapshotWithSelector = function() {
              return memoizedSelector(getSnapshot());
            };
            var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? void 0 : function() {
              return memoizedSelector(maybeGetServerSnapshot());
            };
            return [getSnapshotWithSelector, getServerSnapshotWithSelector];
          }, [getSnapshot, getServerSnapshot, selector, isEqual]), getSelection = _useMemo[0], getServerSelection = _useMemo[1];
          var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);
          useEffect(function() {
            inst.hasValue = true;
            inst.value = value;
          }, [value]);
          useDebugValue2(value);
          return value;
        }
        exports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/with-selector.js
var require_with_selector = __commonJS({
  "node_modules/use-sync-external-store/shim/with-selector.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_with_selector_development();
    }
  }
});

// node_modules/@studio-freight/hamo/dist/hamo.modern.mjs
var import_react = __toESM(require_react(), 1);

// node_modules/@studio-freight/tempus/dist/tempus.modern.mjs
var a = "undefined" != typeof window && new class {
  constructor() {
    this.raf = (a3) => {
      requestAnimationFrame(this.raf);
      const t2 = a3 - this.now;
      this.now = a3;
      for (let s2 = 0; s2 < this.callbacks.length; s2++) this.callbacks[s2].callback(a3, t2);
    }, this.callbacks = [], this.now = performance.now(), requestAnimationFrame(this.raf);
  }
  add(a3, t2 = 0) {
    return this.callbacks.push({ callback: a3, priority: t2 }), this.callbacks.sort((a4, t3) => a4.priority - t3.priority), () => this.remove(a3);
  }
  remove(a3) {
    this.callbacks = this.callbacks.filter(({ callback: t2 }) => a3 !== t2);
  }
}();

// node_modules/just-debounce-it/index.mjs
var functionDebounce = debounce;
function debounce(fn, wait, callFirst) {
  var timeout = null;
  var debouncedFn = null;
  var clear = function() {
    if (timeout) {
      clearTimeout(timeout);
      debouncedFn = null;
      timeout = null;
    }
  };
  var flush = function() {
    var call = debouncedFn;
    clear();
    if (call) {
      call();
    }
  };
  var debounceWrapper = function() {
    if (!wait) {
      return fn.apply(this, arguments);
    }
    var context = this;
    var args = arguments;
    var callNow = callFirst && !timeout;
    clear();
    debouncedFn = function() {
      fn.apply(context, args);
    };
    timeout = setTimeout(function() {
      timeout = null;
      if (!callNow) {
        var call = debouncedFn;
        debouncedFn = null;
        return call();
      }
    }, wait);
    if (callNow) {
      return debouncedFn();
    }
  };
  debounceWrapper.cancel = clear;
  debounceWrapper.flush = flush;
  return debounceWrapper;
}

// node_modules/nanoevents/index.js
var createNanoEvents = () => ({
  emit(event, ...args) {
    for (let i2 = 0, callbacks = this.events[event] || [], length = callbacks.length; i2 < length; i2++) {
      callbacks[i2](...args);
    }
  },
  events: {},
  on(event, cb) {
    var _a;
    ;
    ((_a = this.events)[event] || (_a[event] = [])).push(cb);
    return () => {
      var _a2;
      this.events[event] = (_a2 = this.events[event]) == null ? void 0 : _a2.filter((i2) => cb !== i2);
    };
  }
});

// node_modules/@studio-freight/hamo/dist/hamo.modern.mjs
function f(e2, n3 = 0) {
  (0, import_react.useEffect)(() => {
    if (e2) return a.add(e2, n3), () => a.remove(e2);
  }, [e2, n3]);
}
function g() {
  return g = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var n3 = arguments[t2];
      for (var r3 in n3) Object.prototype.hasOwnProperty.call(n3, r3) && (e2[r3] = n3[r3]);
    }
    return e2;
  }, g.apply(this, arguments);
}
function p(e2) {
  "sticky" === getComputedStyle(e2).position && (e2.style.setProperty("position", "static"), e2.dataset.sticky = "true"), e2.offsetParent && p(e2.offsetParent);
}
function b(e2) {
  var t2;
  "true" === (null == e2 || null == (t2 = e2.dataset) ? void 0 : t2.sticky) && (e2.style.removeProperty("position"), e2.dataset.sticky = "true", delete e2.dataset.sticky), e2.parentNode && b(e2.parentNode);
}
function y(e2, t2 = 0) {
  const n3 = t2 + e2.offsetTop;
  return e2.offsetParent ? y(e2.offsetParent, n3) : n3;
}
function z(e2, t2 = 0) {
  const n3 = t2 + e2.offsetLeft;
  return e2.offsetParent ? z(e2.offsetParent, n3) : n3;
}
function P(e2, t2 = 0) {
  const n3 = t2 + e2.scrollTop;
  return e2.offsetParent ? P(e2.offsetParent, n3) : n3 + window.scrollY;
}
function E(e2, t2 = 0) {
  const n3 = t2 + e2.scrollLeft;
  return e2.offsetParent ? E(e2.offsetParent, n3) : n3 + window.scrollX;
}
var L = createNanoEvents();
function k({ ignoreTransform: r3 = false, ignoreSticky: c2 = true, debounce: u2 = 500, lazy: s2 = false, callback: a3 } = {}) {
  const [d2, l2] = (0, import_react.useState)(), f3 = (0, import_react.useRef)({}), [h, m2] = (0, import_react.useState)({}), v = (0, import_react.useCallback)(({ top: e2, left: t2, width: n3, height: r4, element: o3 }) => {
    var c3, i2, u3, d3, l3;
    e2 = null != (c3 = e2) ? c3 : f3.current.top, t2 = null != (i2 = t2) ? i2 : f3.current.left, n3 = null != (u3 = n3) ? u3 : f3.current.width, r4 = null != (d3 = r4) ? d3 : f3.current.height, o3 = null != (l3 = o3) ? l3 : f3.current.element, e2 === f3.current.top && t2 === f3.current.left && n3 === f3.current.width && r4 === f3.current.height && o3 === f3.current.element || (f3.current.top = e2, f3.current.y = e2, f3.current.width = n3, f3.current.height = r4, f3.current.left = t2, f3.current.x = t2, f3.current.bottom = e2 + r4, f3.current.right = t2 + n3, f3.current.element = o3, null == a3 || a3(f3.current), s2 || m2(g({}, f3.current)));
  }, [s2]);
  (0, import_react.useEffect)(() => {
    if (!d2) return;
    const e2 = d2.getBoundingClientRect();
    v({ width: e2.width, height: e2.height });
    const t2 = functionDebounce(([e3]) => {
      v({ width: e3.borderBoxSize[0].inlineSize, height: e3.borderBoxSize[0].blockSize });
    }, u2), n3 = new ResizeObserver(t2);
    return n3.observe(d2), () => {
      n3.disconnect(), t2.cancel();
    };
  }, [d2, u2, v]);
  const [w, k2] = (0, import_react.useState)(), x = (0, import_react.useCallback)(() => {
    if (!d2) return;
    let e2, t2;
    if (c2 && p(d2), r3) e2 = y(d2), t2 = z(d2);
    else {
      const n3 = d2.getBoundingClientRect();
      e2 = n3.top + P(d2), t2 = n3.left + E(d2);
    }
    c2 && b(d2), v({ top: e2, left: t2, element: d2 });
  }, [r3, c2, d2, v]);
  (0, import_react.useEffect)(() => {
    x();
    const e2 = functionDebounce(x, u2), t2 = new ResizeObserver(e2);
    return t2.observe(null != w ? w : document.body), () => {
      t2.disconnect(), e2.cancel();
    };
  }, [w, u2, x]), (0, import_react.useEffect)(() => L.on("resize", function() {
    if (!d2) return;
    const e2 = d2.getBoundingClientRect();
    v({ width: e2.width, height: e2.height }), x();
  }), [d2, x, v]);
  const O = (0, import_react.useCallback)(() => f3.current, []);
  return [l2, s2 ? O : h, k2];
}
k.resize = () => {
  L.emit("resize");
};

// node_modules/clsx/dist/clsx.mjs
function r2(e2) {
  var t2, f3, n3 = "";
  if ("string" == typeof e2 || "number" == typeof e2) n3 += e2;
  else if ("object" == typeof e2) if (Array.isArray(e2)) {
    var o3 = e2.length;
    for (t2 = 0; t2 < o3; t2++) e2[t2] && (f3 = r2(e2[t2])) && (n3 && (n3 += " "), n3 += f3);
  } else for (f3 in e2) e2[f3] && (n3 && (n3 += " "), n3 += f3);
  return n3;
}
function clsx() {
  for (var e2, t2, f3 = 0, n3 = "", o3 = arguments.length; f3 < o3; f3++) (e2 = arguments[f3]) && (t2 = r2(e2)) && (n3 && (n3 += " "), n3 += t2);
  return n3;
}
var clsx_default = clsx;

// node_modules/@studio-freight/react-lenis/dist/react-lenis.mjs
var import_react3 = __toESM(require_react(), 1);

// node_modules/zustand/esm/vanilla.mjs
var createStoreImpl = (createState) => {
  let state;
  const listeners = /* @__PURE__ */ new Set();
  const setState = (partial, replace) => {
    const nextState = typeof partial === "function" ? partial(state) : partial;
    if (!Object.is(nextState, state)) {
      const previousState = state;
      state = (replace != null ? replace : typeof nextState !== "object" || nextState === null) ? nextState : Object.assign({}, state, nextState);
      listeners.forEach((listener) => listener(state, previousState));
    }
  };
  const getState = () => state;
  const getInitialState = () => initialState;
  const subscribe = (listener) => {
    listeners.add(listener);
    return () => listeners.delete(listener);
  };
  const destroy = () => {
    if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production") {
      console.warn(
        "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
      );
    }
    listeners.clear();
  };
  const api = { setState, getState, getInitialState, subscribe, destroy };
  const initialState = state = createState(setState, getState, api);
  return api;
};
var createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;

// node_modules/zustand/esm/index.mjs
var import_react2 = __toESM(require_react(), 1);
var import_with_selector = __toESM(require_with_selector(), 1);
var { useDebugValue } = import_react2.default;
var { useSyncExternalStoreWithSelector } = import_with_selector.default;
var didWarnAboutEqualityFn = false;
var identity = (arg) => arg;
function useStore(api, selector = identity, equalityFn) {
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && equalityFn && !didWarnAboutEqualityFn) {
    console.warn(
      "[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"
    );
    didWarnAboutEqualityFn = true;
  }
  const slice = useSyncExternalStoreWithSelector(
    api.subscribe,
    api.getState,
    api.getServerState || api.getInitialState,
    selector,
    equalityFn
  );
  useDebugValue(slice);
  return slice;
}
var createImpl = (createState) => {
  if ((import.meta.env ? import.meta.env.MODE : void 0) !== "production" && typeof createState !== "function") {
    console.warn(
      "[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."
    );
  }
  const api = typeof createState === "function" ? createStore(createState) : createState;
  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);
  Object.assign(useBoundStore, api);
  return useBoundStore;
};
var create = (createState) => createState ? createImpl(createState) : createImpl;

// node_modules/@studio-freight/react-lenis/dist/react-lenis.mjs
"undefined" != typeof window && (window.reactLenisVersion = "0.0.47");
var d = (0, import_react3.createContext)(null);
var m = create(() => ({}));
function b2(r3, e2 = [], t2 = 0) {
  const { lenis: n3, addCallback: o3, removeCallback: a3 } = function() {
    const r4 = (0, import_react3.useContext)(d), e3 = m();
    return null != r4 ? r4 : e3;
  }();
  return (0, import_react3.useEffect)(() => {
    if (r3 && o3 && a3 && n3) return o3(r3, t2), r3(n3), () => {
      a3(r3);
    };
  }, [n3, o3, a3, t2, ...e2]), n3;
}
var y2 = (0, import_react3.forwardRef)((o3, a3) => {
  var { children: f3, root: p2 = false, options: b3 = {}, autoRaf: y3 = true, rafPriority: v = 0, className: O } = o3, g2 = function(r3, e2) {
    var t2 = {};
    for (var n3 in r3) Object.prototype.hasOwnProperty.call(r3, n3) && e2.indexOf(n3) < 0 && (t2[n3] = r3[n3]);
    if (null != r3 && "function" == typeof Object.getOwnPropertySymbols) {
      var o4 = 0;
      for (n3 = Object.getOwnPropertySymbols(r3); o4 < n3.length; o4++) e2.indexOf(n3[o4]) < 0 && Object.prototype.propertyIsEnumerable.call(r3, n3[o4]) && (t2[n3[o4]] = r3[n3[o4]]);
    }
    return t2;
  }(o3, ["children", "root", "options", "autoRaf", "rafPriority", "className"]);
  const h = (0, import_react3.useRef)(null), w = (0, import_react3.useRef)(null), [k2, N] = (0, import_react3.useState)(void 0), j = (0, import_react3.useRef)([]), C = (0, import_react3.useCallback)((r3, e2) => {
    j.current.push({ callback: r3, priority: e2 }), j.current.sort((r4, e3) => r4.priority - e3.priority);
  }, []), E2 = (0, import_react3.useCallback)((r3) => {
    j.current = j.current.filter((e2) => e2.callback !== r3);
  }, []);
  (0, import_react3.useImperativeHandle)(a3, () => ({ wrapper: h.current, content: w.current, lenis: k2 }), [k2]), (0, import_react3.useEffect)(() => {
    const r3 = new Lenis(Object.assign(Object.assign({}, b3), !p2 && { wrapper: h.current, content: w.current }));
    return N(r3), () => {
      r3.destroy(), N(void 0);
    };
  }, [p2, JSON.stringify(b3)]), f((r3) => {
    y3 && (null == k2 || k2.raf(r3));
  }, v), (0, import_react3.useEffect)(() => {
    p2 && k2 && m.setState({ lenis: k2, addCallback: C, removeCallback: E2 });
  }, [p2, k2, C, E2]);
  const P2 = (0, import_react3.useCallback)((r3) => {
    for (let e2 = 0; e2 < j.current.length; e2++) j.current[e2].callback(r3);
  }, []);
  (0, import_react3.useEffect)(() => (null == k2 || k2.on("scroll", P2), () => {
    null == k2 || k2.off("scroll", P2);
  }), [k2, P2]);
  const S = (0, import_react3.useCallback)(() => {
    h.current && (h.current.className = clsx_default(null == k2 ? void 0 : k2.className, O));
  }, [k2, O]);
  return (0, import_react3.useEffect)(() => (S(), null == k2 || k2.on("className change", S), () => {
    null == k2 || k2.off("className change", S);
  }), [k2, S]), import_react3.default.createElement(d.Provider, { value: { lenis: k2, addCallback: C, removeCallback: E2 } }, p2 ? f3 : import_react3.default.createElement("div", Object.assign({ ref: h, className: clsx_default(null == k2 ? void 0 : k2.className, O) }, g2), import_react3.default.createElement("div", { ref: w }, f3)));
});
export {
  y2 as Lenis,
  d as LenisContext,
  y2 as ReactLenis,
  y2 as default,
  b2 as useLenis
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@studio-freight_react-lenis.js.map
